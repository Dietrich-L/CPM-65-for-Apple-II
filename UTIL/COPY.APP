FCB_CHECK

	LDY #1
	LDA (FCB1),Y	;CHECK FOR ARGUMENT
	CMP #SP
	BNE FCB_1
	LDA #'?		;SET FCB1 TO *.*
	LDY #11
FCB_2	STA (FCB1),Y
	DEY
	BNE FCB_2
FCB_1	RTS


SETSFCB	LDA #0			;SET SOURCE FCB
	TAY
	STA (FCB1),Y
SETSFC1	INY
	LDA (S_PNT),Y
	STA (FCB1),Y
	CPY #11
	BCC SETSFC1
	RTS


SETDFCB	LDA #0			;SET DESTINATION FCB1
	TAY
	STA (FCB1),Y
SETDFC1	INY
	LDA (BUFPNT),Y
	STA (FCB1),Y
	CPY #11
	BCC SETDFC1
	RTS


PRTFCB	JSR CRLF			;PRINT FILENAME IN FCB1
	LDY #1
PRTFCB1	LDA (FCB1),Y
	JSR PRTCHR
	INY
	CPY #9
	BCC PRTFCB1
	LDA #'.
	JSR PRTCHR
PRTFCB2	LDA (FCB1),Y
	JSR PRTCHR
	INY
	CPY #12
	BCC PRTFCB2
	RTS


MAKFIL	LDX #CREATE		;MAKE OR OPEN FILE
	JSR BDOS
	BCC MAKFILX
	CMP #DOUBLE
	BEQ MAKFIL1
	SEC
MAKFILX	RTS

MAKFIL1	LDA #ASKCOPY
	LDY #ASKCOPY/256
	JSR PRTSTR
	LDX #CONIN
	JSR BDOS
	CMP #'y
	BEQ MAKFIL2
	CMP #'Y
	BEQ MAKFIL2
	LDA #NOCOPY
	SEC
	RTS

MAKFIL2	LDX #OPEN
	JSR BDOS
	RTS


RESDMA	LDA #0			;RESET DMA
	STA DMA
	LDA 1PAGE
	STA DMA+1
	RTS


BIOS	LDX #BIOSC		;BIOS CALL
	JMP BDOS


ERROR	STA ERRNO	;ERROR ROUTINE
	JSR CRLF
	LDA #ERRTAB	;SET CCPV
	STA CCPV
	LDA #ERRTAB/256
	STA CCPV+1
	LDY #0  	;CHECK ERROR CODE
	LDA (CCPV),Y
ERROR1	BEQ ERROR4	;END OF ERROR ROUTINE
	CMP ERRNO
	BEQ ERROR3
ERROR2	JSR INCCPV	;SKIP ERROR MESSAGE
	BNE ERROR2
	JSR INCCPV
	JMP ERROR1

ERROR3	JSR INCCPV
	PHA
	JSR ERRTYP	;PRINT ERROR TYPE
	JSR INCCPV
	LDA CCPV	;PRINT ERROR MESSAGE
	LDY CCPV+1
	JSR PRTSTR
	PLA
	BPL ERROR5
	JSR ASKRTY	;ASK FOR RETRY
	LDA ERRNO
	RTS

ERROR4  JSR UETYP	;UNKNOWN ERROR
ERROR5  SEC
	RTS


ERRTYP  LDY #0  	;PRINT ERROR TYPE
ERRTY1  LSR A   	;SHIFT SOURCE BIT IN C
	BCS ERRTY2
	INY		;X= X+5
	INY
	INY
	INY
	INY
	BNE ERRTY1

ERRTY2  LDA ETYPTB,Y
	BEQ UETYP	;LAST CHR?
	JSR PRTCHR
	INY
	BNE ERRTY2

UETYP   LDA #ERRM1
	LDY #ERRM1/256
	JSR PRTSTR
	LDA ERRNO
	JSR PRTHEX

CRLF	LDA #CRLFM	;PRINTS A NEWLINE
	LDY #CRLFM/256

PRTSTR  LDX #STROUT
	JMP BDOS


PRT2SP  JSR PRTSP
PRTSP   LDA #SP
PRTCHR  LDX #CONOUT	;PRINTS A CHR
	JMP BDOS


INCCPV  INC CCPV	;INC CCPV
	BNE INCCP1
	INC CCPV+1
INCCP1  LDA (CCPV),Y
	RTS


ASKRTY  LDA #RTYMES	;RETRY?
	LDY #RTYMES/256
	JSR PRTSTR
	LDX #CONIN
	JSR BDOS
	CMP #'y
	BEQ ASKRT1
	CMP #'Y
	BEQ ASKRT1
	SEC
	RTS

ASKRT1  CLC
	RTS


PRTHEX  PHA		;PRINTS A HEX NUMBER
	LSR A
	LSR A
	LSR A
	LSR A
	JSR PRTNIB	;PRINT NIBBLE
	PLA
	AND #$0F

PRTNIB  CMP #$0A
	BCC PRTNI1
	ADC #6
PRTNI1  ADC #$30
	JSR PRTCHR
	RTS

;======   MESSAGES  ======

ERRM1   DB ' Error $',EOT
RTYMES  DB CR,LF,'Retry  (Y/N) ? ',EOT

ETYPTB  DB 'BIOS',$00,'BDOS',$00,'CCP',$00,$00
	DB 'RSX',$00,$00,'USER',$00

ERRTAB  DB $FD,$81,'Drive not ready',EOT
	DB $F9,$01,'Invalid Drive',EOT
	DB $DE,$02,'Directory full',EOT
	DB $DD,$82,'File not found',EOT
	DB $DC,$02,'File exists',EOT
	DB $D9,$02,'Invalid FCB',EOT
	DB $D8,$02,'Disk full',EOT
	DB $D6,$02,'File is R/O',EOT
	DB $81,$10,'*** COPY aborted ***',EOT
	DB $82,$10,'Switch missing',EOT
	DB $83,$10,'Argument missing',CR,LF
	DB 'Usage:   COPY d:filename.ext d: /switch',CR,LF
	DB 'Switch     Y   Y/N request for every filename',CR,LF,EOT
	DB $84,$10,'no file found',EOT
	DB $85,$10,'file too long to copy',EOT
	DB $00

;-----	TABLES  --------------------------------

SWTAB	DB 'Y',$80
SWTABX

;MESSAGES

MESSAGE
	DB '  ^C=abort, E=Exit, Y/N  ',EOT

STARTM	DB CR,LF,CR,LF,'COPY V1.4                '
	DB '  (c) D.Lausberg   1995',CR,LF,CR,LF,EOT
ENDM	DB CR,LF,CR,LF,'COPY finished',CR,LF,EOT
SOURCE	DB CR,LF,CR,LF,'Insert source',EOT
DEST	DB CR,LF,CR,LF,'Insert destination',EOT
XCHGM	DB ' disc to drive '
DRIVE	DB 'A: and press any key ',EOT
READING	DB CR,LF,'reading ...',EOT
WRITING	DB CR,LF,'writing ...',EOT
ASKCOPY	DB '  File exists, overwrite? (Y/N) ',EOT
CRLFM	DB CR,LF,EOT


BUFFER

	END
