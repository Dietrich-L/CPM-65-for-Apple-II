;DUTIL.COM -- CP/M-65 DISKETTEN UTILITY  Apple II Version
;BY D. LAUSBERG	 (C)1988
;V1.2	14.06.90
;V1.3	 8.01.95		ASM-65 Version
;V1.4	04.07.00		BDOS 2.0 Version
;V1.5	31.05.21		some corrections
VERSION	= $15

;SYSTEM CONSTANTS
DMA	=  $FE
DPH	=  $F8
FCB1	=  $F6
FCB2	=  $F4
BDOS	=  $F0
INBUF	=  $EC
CCPV	=  $DE
TPA	=  $0800
BUFBEG	=  $8000

YSPBDIV	= 1
YBPD	= 2
YSYS	= 7

CMDVEC	= $00
CMDKEY	= $01
PNT	= $02
CNT	= $03
MCNT	= $04
RCOUNT	= $05
BUFFER	= $08
NUMBER	= $09
HEXL	= $0A
HEXH	= $0B
HEXX	= $0C
DIVL	= $0D
DIVM	= $0E
DIVH	= $0F
DRIVE	= $10
ERRNO	= $11
SEC	= $12
MAXSEC	= $15
SYS	= $18

;BDOS COMMANDS

BOOT	= $00
CONIN	= $01
CONOUT	= $02
STROUT	= $09
GETLIN	= $0A
DSKSEL	= $0E
DEFDRV	= $19
BIOS	= $1A

;BIOS COMMANDS

SETTRK	= 10
SETSEC	= 11
READ	= 12
WRITE	= 13

;CONTROL CODES

EOT	= $00
BS	= $08
LF	= $0A
CLS	= $0C
CR	= $0D
SPACE	= $20
SEMI	= $3B

;ERROR CODES

NOCOM	= $80
MISPAR	= $81
ILLPAR	= $82
TOOMCH	= $83
EOL	= $84

	ORG TPA

DUTIL	JSR INIT 		;INIT VARIABLES

DUTILL	JSR STATUS
	LDA #PROMPT
	LDY #PROMPT/256
	JSR PRTSTR
	LDX #GETLIN
	JSR BDOS
	LDY #0			;SET COMMAND POINTER
	STY CMDVEC
DUTIL1	JSR DECODE		;DECODE AND EXEC COMMAND
	BCC DUTIL1
	CMP #EOL 		;END OF COMMAND
	BEQ DUTILL
	JSR ERROR
	JMP DUTILL


INIT	LDA #0			;RESET VARIABLES
	LDX #20
INIT2	STA 0,X
	DEX
	BPL INIT2
	LDA #BUFBEG		;SET BUFFER VECTOR
	STA BUFFER
	LDA #BUFBEG/256
	STA BUFFER+1
	LDX #DEFDRV		;GET DEFAULT DRIVE
	JSR BDOS
	STA DRIVE
	LDX #DSKSEL		;LOGIN
	JSR BDOS
	BCS INIT1
	JSR DRVPAR		;GET DRIVE PARAM'S
	RTS

INIT1	JSR ERROR
	BCC INIT
	LDX #BOOT
	JMP BDOS


DRVPAR	LDA #0			;RESET VARIABLES
	STA DIVH
	LDY #6+YBPD+1		;GET BPD
	LDA (DPH),Y
	STA DIVM
	DEY
	LDA (DPH),Y
	PHA
	LDY #6+YSPBDIV		;GET SPBDIV
	LDA (DPH),Y
	TAY
	PLA
DRVPA1	ASL A			;BPD*SPB
	ROL DIVM
	ROL DIVH
	DEY
	BNE DRVPA1
	STA DIVL
	STA MAXSEC
	LDA DIVM
	STA MAXSEC+1
	LDA DIVH
	STA MAXSEC+2
	LDY #6+YSYS		;GET SYS
	CLC
DRVPA2	LDA (DPH),Y
	STA SYS
	ADC MAXSEC
	STA MAXSEC
	INY
	LDA (DPH),Y
	STA SYS+1
	ADC MAXSEC+1
	STA MAXSEC+1
	INY
	LDA (DPH),Y
	STA SYS+2
	ADC MAXSEC+2
	STA MAXSEC+2
	RTS


STATUS	LDA #STATM1		;DISPLAY STATUS
	LDY #STATM1/256
	JSR PRTSTR
	LDA DRIVE		;PRINT DRIVE
	CLC
	ADC #'A
	JSR PRTCHR
	LDA #STATM2
	LDY #STATM2/256
	JSR PRTSTR
	LDY #2
STATUS1	LDA SEC,Y
	JSR PRTHEX		;PRINT HEX VALUE
	DEY
	BPL STATUS1
	RTS


PRTDEC	JSR COMNUM		;PRINTS DECIMAL
	PHA
	TYA
	JSR COMNUM
	PHA
	TYA
	JSR PRTNUM
	PLA
	JSR PRTNUM
	PLA
	JSR PRTNUM
	RTS


COMNUM	LDY #0			;DIV/10
COMNU1	SEC
	SBC #10
	BCC COMNU2
	INY
	BNE COMNU1

COMNU2	ADC #10
	RTS


PRTNUM	ORA #$30 		;PRINT A NUMBER
	JMP PRTCHR


DECODE	JSR GNCHR		;GET NEXT CHR
	BCS DECODX
	CMP #SEMI		;IS IT A SEPARATOR
	BNE DECOD1
	JSR GNCHR
	BCS DECODX
DECOD1	LDY #0			;SEARCH COMMAND
	STA CMDKEY
DECOD4	LDA CMDTAB,Y
	BEQ DECOD2		;COMMAND NOT FOUND
	CMP CMDKEY
	BEQ DECOD3		;FOUND
	INY
	INY
	INY
	BNE DECOD4

DECOD3	INY
	LDA CMDTAB,Y
	PHA
	INY
	LDA CMDTAB,Y
	PHA
	RTS			;EXEC

DECOD2	LDA #NOCOM		;UNKNOWN COMMAND
	SEC
DECODX	RTS

CMDTAB	DB 'S'
	DD SECRD-1
	DB 'D'
	DD DUMP-1
	DB 'C'
	DD CHANGE-1
	DB '+'
	DD PLUS-1
	DB '-'
	DD MINUS-1
	DB 'R'
	DD READS-1
	DB 'W'
	DD WRITES-1
	DB 'X'
	DD EXIT-1
	DB '?'
	DD HELP-1
	DB 'Z'
	DD WAIT-1
	DB '>'
	DD STOBUF-1
	DB '<'
	DD STODMA-1
	DB '/'
	DD REPEAT-1
	DB 'B'
	DD SETBUF-1
	DB 'L'
	DD LOGON-1

	DB $00

;==========  COMMANDS  ============= 


SECRD	JSR GETSEC		;GET HEX BYTE
	BCS SECRDX
	JSR CMSEC
SECRD1	JSR READS		;READ SECTOR
SECRDX	RTS


DUMP	JSR STATUS		;DUMP DMA
	LDA #0
DUMP3	STA PNT			;SET POINTER
	JSR CRLF
	LDY PNT
DUMP1	LDA (DMA),Y
	JSR DISHEX
	INY
	TYA
	AND #$0F
	PHA
	CMP #8
	BNE DUMP4
	LDA #BS
	JSR PRTCHR
DUMP4	PLA
	BNE DUMP1
	LDY PNT
DUMP2	LDA (DMA),Y
	JSR DISASC
	INY
	TYA
	AND #$0F
	BNE DUMP2
	TYA
	BNE DUMP3
	CLC
	RTS


CHANGE	JSR GNCHR		;GET NEXT CHR
	BCS CHANGX
	CMP #'H
	BEQ CHEX
	CMP #'A
	BEQ CASC
	LDA #ILLPAR		;ILLEGAL PARAMETER
CHANGX	SEC
	RTS

CHEX	JSR GETHEX		;GET DMA POINTER
	BCS CHANGX
	STA PNT
CHEX1	JSR GETHEX		;GET HEX VALUE
	BCS CHEX2
	LDY PNT
	STA (DMA),Y		;REPLACE
	INC PNT
	BNE CHEX1
	LDA #TOOMCH		;TOO MUCH PARAMETERS
	SEC
	RTS

CHEX2	CMP #MISPAR
	BNE CHANGX
	CLC
	RTS

CASC	JSR GETHEX		;GET DMA POINTER
	BCS CHANGX
	STA PNT
CASC1	JSR GNCHR		;GET HEX VALUE
	BCS CHANGX
	LDY PNT
	STA (DMA),Y		;REPLACE
	INC PNT
	BNE CASC1
	LDA #TOOMCH		;TOO MUCH PARAMETERS
	SEC
	RTS


PLUS	LDX #0
PLUS2	INC SEC,X
	BNE PLUS1
	INX
	CPX #3
	BCC PLUS2
PLUS1	JSR CMSEC
	JSR READS
	RTS


MINUS	LDX #0
MINUS2	DEC SEC,X
	LDA SEC,X
	CMP #$FF
	BNE MINUS1
	INX
	CPX #3
	BCC MINUS2
	JSR CMSEC
MINUS1	JSR READS
	RTS


READS	JSR SETST		;SET SECTOR
	LDY #READ		;AND READ IT
	JSR JBIOS
	RTS


WRITES	JSR SETST
	LDY #WRITE
	JSR JBIOS
	RTS


EXIT	LDX #BOOT
	JSR BDOS


HELP	LDA #HELPM
	LDY #HELPM/256
	JSR PRTSTR
	RTS


WAIT	JSR GDEC 		;WAIT NN/10 S
	BCS WAITX
	STA CNT
WAIT3	LDA #10
	STA MCNT 		;100 MS
WAIT2	LDX #78
WAIT1	DEY
	BNE WAIT1
	DEX
	BNE WAIT1
	DEC MCNT
	BNE WAIT2
	DEC CNT
	BNE WAIT3
	CLC
WAITX	RTS


STOBUF	LDY #0			;SAVE DMA TO BUFFER
STOBU1	LDA (DMA),Y
	STA (BUFFER),Y
	INY
	BNE STOBU1
	CLC
	RTS


STODMA	LDY #0			;STORE BUFFER TO DMA
STODM1	LDA (BUFFER),Y
	STA (DMA),Y
	INY
	BNE STODM1
	CLC
	RTS


REPEAT	LDA RCOUNT		;REPEAT COMMAND
	BEQ REPEA1
REPEA3	DEC RCOUNT		;ONE MORE TIME
	BEQ REPEA5
	LDA #0
	STA CMDVEC
	CLC
	RTS

REPEA1	JSR GDEC 		;GET NO. OF REPEATS
	BCS REPEA2
	STA RCOUNT
	CMP #0
	BNE REPEA3
	LDA #ILLPAR
REPEA4	SEC
	RTS

REPEA2	CMP #MISPAR
	BNE REPEA4
	LDA #10			;DEFAULT 10 TIMES
	STA RCOUNT
	BNE REPEA3

REPEA5	LDA #EOL
	SEC
	RTS


SETBUF	JSR GETHEX		;GET BUFFER ADDRESS
	BCS SETBUX
	STY BUFFER+1
	STA BUFFER
SETBUX	RTS


LOGON	JSR GNCHR		;LOGON DRIVE
	BCS LOGON1
	SBC #$40
	BCC LOGON3
	CMP #7			;Drives A..F
	BCS LOGON3
	STA DRIVE
LOGON2	LDX #DSKSEL		;SELECT DRIVE
	JSR BDOS
	BCS LOGON4
	JSR DRVPAR		;SET PARAMETERS
	RTS

LOGON1	LDA DRIVE
	JMP LOGON2

LOGON3	LDA #ILLPAR
	SEC
	RTS

LOGON4	JSR ERROR
	BCC LOGON1
	JSR INIT
	CLC
	RTS

	APP DUTIL.APP
