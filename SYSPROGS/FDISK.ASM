;FDISK - Copies CPM-65 on a DOS3.3 formatted disc and erases directory 

;D. LAUSBERG	(C) 2023
;V1.0	07.07.23


VERSION	= $10		;VERSION NUMBER

;=====================================

;SYSTEM CONSTANTS

DMA	= $FE
BDOS	= $F0
FCB1	= $F6
DPH	= $F8
CCPV	= $DE
TPA	= $0800

DRIVE	= 0
TRK	= 1
SEC	= 2
ERRNO	= 3		;ERROR NR
RWFLAG	= 4		;READ/WRITE FLAG
MAXTRK	= 5		;MAX TRACKS
MAXSEC	= 6		;MAX SECTORS
SYSSECS = 7		;NR OF SYSTEM sectors
TRACK	= 8		;track buffer for form_trk
SIDEMS	= 9		;side bit
SECTOR	= 10		;sector nr
ERRCOD	= 13		;error nr buffer
RETRY	= 14		;retry counter
DIRSCS	= 15
CNT	= 16

;BDOS COMMANDS

CONIN	= $01
CONOUT	= $02
STROUT	= $09
DSKSEL	= $0E
GETDRV	= $19
FBIOS	= $1A

;BIOS COMMANDS

CHRIN	= 3
HOME	= 8
SELDSK	= 9
SETSEC	= 11
READ	= 12
WRITE	= 13
GET_VER	= 15


;CONSTANTS

SPT	= 16		;SECTORS PER TRACK
MAXSECS	= 32		;Max. nr of system sectors
MAXTRY	= 10		;MAX TRIES ON ERROR


;CONTROL CODES

CR	= $0D
LF	= $0A
CLS	= $0C
SP	= $20
BREAK	= $03
EOT	= $00

;ERROR CODES

WRPROT	= $FC		;DISK WRITE PROTECTED
VER_ERR	= $83
SYSGERR = $85

;==========================================

	ORG TPA

	JSR INIT
	BCC SYSGEN
	JSR ERROR
	RTS

SYSGEN	JSR SYSDISK
	BCC FWEIT
	JSR ERROR
	BCC SYSGEN

FWEIT	LDA #REPM		;REPEAT?
	LDY #REPM/256
	JSR PRTSTR
	JSR YESNO
	BCC SYSGEN
EXIT	RTS


SYSDISK	JSR XCH_DSK		;INSERT A NEW DISC
	BCC SYSD1
	JSR ERROR
	JMP EXIT

SYSD1	LDA DRIVE
	LDY #SELDSK		;SELECT DRIVE
	JSR BIOS

ENDDSK	JSR PUT_SYS		;WRITE SYSTEM TO DISK
	BCS ENDDSKX
	JSR ERADIR		;erase directory
	BCS ENDDSKX
	LDA #OKM
	LDY #OKM/256
	JSR PRTSTR
	CLC
ENDDSKX	RTS


;======== SUBROUTINES =============

INIT	LDA #STARTM
	LDY #STARTM/256
	JSR PRTSTR
	LDY #GET_VER
	JSR BIOS
	CMP #$03
	BCC INITX
	LDX #GETDRV
	JSR BDOS
	CMP #5			;no SYSTEM on F: or higher
	BCS INIT1
	LDY #6			;SET DISK PARAMETERS
	LDA (DPH),Y
	STA MAXSEC
	LDY #10
	LDA (DPH),Y
	STA DIRSCS
	LDY #13
	LDA (DPH),Y
	STA SYSSECS
	JSR CLR_SEC_E5		;fill SEC_E5 with $E5
	JSR GET_SYS
	RTS

INITX	LDA #VER_ERR
	SEC
	RTS

INIT1	LDA #SYSGERR
	SEC
	RTS


GET_SYS	LDA #0			;RESET RWFLAG AND DRIVE
	STA DRIVE
	STA RWFLAG
	BEQ SYS

PUT_SYS	LDA #$80		;SET RWFLAG
	STA RWFLAG

SYS	JSR RES_DMA
	LDA #0
	STA SECTOR
	STA SECTOR+1
	STA SECTOR+2
SYS1	JSR RW_SYS
	BCS SYS_X
	INC SECTOR		;System never larger than $FF sectors = 64 kB
	LDA SECTOR
	CMP SYSSECS
	BCC SYS1
	CLC
SYS_X	RTS


ERADIR	LDA #SEC_E5		;set DMA = SEC_E5
	STA DMA
	LDA #SEC_E5/256
	STA DMA+1
	LDA DIRSCS
	STA CNT			;set # dir secs to erase
ERADIR1	LDY #SETSEC		;READ/WRITE SECTOR TO DMA
	LDA #SECTOR
	JSR BIOS
	LDY #WRITE
	JSR BIOS
	BCS ERADIRX
	INC SECTOR
	DEC CNT
	BNE ERADIR1
	CLC
ERADIRX	RTS


GETKEY	LDY #CHRIN		;TASTE EINLESEN
	JSR BIOS
	RTS


YESNO	JSR GETKEY		;J/N?
	JSR UPCASE
	CMP #'J
	BEQ YESNO1
	CMP #'Y
	BEQ YESNO1
	SEC
	RTS

YESNO1	CLC
	RTS


RW_SYS	LDY #SETSEC		;READ/WRITE SECTOR TO DMA
	LDA #SECTOR
	JSR BIOS
	BIT RWFLAG
	BMI RW_TRK2
	LDY #READ
	JSR BIOS
	BCS RW_TRKX
RW_TRK3	INC DMA+1
RW_TRKX	RTS

RW_TRK2	LDY #WRITE
	JSR BIOS
	BCC RW_TRK3
	RTS


RES_DMA	LDA #HEAP
	STA DMA
	LDA #HEAP/256
	STA DMA+1
	RTS


CLR_SEC_E5			;fill SEC_E5 with $E5
	LDA #$E5
	LDY #0
CLR_SE1	STA SEC_E5,Y
	INY
	BNE CLR_SE1
	RTS


XCH_DSK	CLC
	LDY #0
	LDA (FCB1),Y
	BNE XCH_DSK1
	LDX #GETDRV
	JSR BDOS
	SEC

XCH_DSK1
	ADC #$40		;SET DRIVE NAME
	STA DRVCHR
	CMP #'E            		;no System on F: or higher
	BCS XCHDSKX
	AND #$0F		;SET DRIVE
	TAY
	DEY
	STY DRIVE
	LDA #XCHGM
	LDY #XCHGM/256		;INSERT DISK
	JSR PRTSTR
	LDX #CONIN		;WAIT FOR KEY
	JSR BDOS
	JSR CRLF
	CLC
	RTS

XCHDSKX	LDA #SYSGERR
	SEC
	RTS


BIOS	LDX #FBIOS
	JMP BDOS


ERROR	STA ERRNO	;ERROR ROUTINE
	JSR CRLF
	LDA #ERRTAB	;SET CCPV
	STA CCPV
	LDA #ERRTAB/256
	STA CCPV+1
	LDY #0		;CHECK ERROR CODE
	LDA (CCPV),Y
ERROR1	BEQ ERROR4	;END OF ERROR ROUTINE
	CMP ERRNO
	BEQ ERROR3
ERROR2	JSR INCCPV	;SKIP ERROR MESSAGE
	BNE ERROR2
	JSR INCCPV
	JMP ERROR1

ERROR3	JSR INCCPV
	PHA
	JSR ERRTYP	;PRINT ERROR TYPE
	JSR INCCPV
	LDA CCPV	;PRINT ERROR MESSAGE
	LDY CCPV+1
	JSR PRTSTR
	PLA
	BPL ERROR5
	JSR ASKRTY	;ASK FOR RETRY
	LDA ERRNO
	RTS

ERROR4	JSR UETYP	;UNKNOWN ERROR
ERROR5	SEC
	RTS


ERRTYP	LDY #0		;PRINT ERROR TYPE
ERRTY1	LSR A		;SHIFT SOURCE BIT IN C
	BCS ERRTY2
	INY		;X=X+5
	INY
	INY
	INY
	INY
	BNE ERRTY1

ERRTY2	LDA ETYPTB,Y
	BEQ UETYP	;LAST CHR?
	JSR PRTCHR
	INY
	BNE ERRTY2

UETYP	LDA #ERRM1
	LDY #ERRM1/256
	JSR PRTSTR
	LDA ERRNO
	JSR PRTHEX

CRLF	LDA #CRLFM	;PRINTS A NEWLINE
	LDY #CRLFM/256

PRTSTR	LDX #STROUT
	JMP BDOS


PRT2SP	JSR PRTSP


PRTSP	LDA #SP


PRTCHR	LDX #CONOUT	;PRINTS A CHR
	JMP BDOS


INCCPV	INC CCPV	;INC CCPV
	BNE INCCP1
	INC CCPV+1
INCCP1	LDA (CCPV),Y
	RTS


UPCASE	CMP #'a
	BCC UPCASX
	CMP #$7F
	BCS UPCASX
	AND #$5F
UPCASX	RTS


ASKRTY	LDA #RTYMES	;RETRY?
	LDY #RTYMES/256
	JSR PRTSTR
	LDX #CONIN
	JSR BDOS
	JSR UPCASE
	CMP #'Y
	BNE ASKRT1
	CLC
	RTS

ASKRT1	SEC
	RTS


PRTDEC	JSR COMNUM	;PRINT DECIMAL
	PHA
	TYA
	JSR COMNUM
	PHA
	TYA
	JSR PRTNUM
	PLA
	JSR PRTNUM
	PLA		;PLA AND PRTNUM
PRTNUM	ORA #$30
	JMP PRTCHR


COMNUM	LDY #0		;DIV/10
COMNU1	SEC
	SBC #10
	BCC COMNU2
	INY
	BNE COMNU1

COMNU2	ADC #10
	RTS


PRTHEX	PHA		;PRINTS A HEX NUMBER
	LSR A
	LSR A
	LSR A
	LSR A
	JSR PRTNIB	;PRINT NIBBLE
	PLA
	AND #$0F

PRTNIB	CMP #$0A
	BCC PRTNI1
	ADC #6
PRTNI1	ADC #$30
	JSR PRTCHR
	RTS

;======	MESSAGES	======

SETAB	DB $FE,$08,$FF,$10		;SEEK ERROR
	DB $FA,$04,$FC,$40,$FD,$80	;WRITE TRACK ERROR

ERRM1	DB ' Error $',EOT
RTYMES	DB CR,LF,'Retry	(Y/N) ? ',EOT

ETYPTB	DB 'BIOS',$00,'BDOS',$00,'CCP',$00,$00
	DB 'RSX',$00,$00,'USER',$00

ERRTAB	DB $FF,$81,'Seek Error, record not found',EOT
	DB $FE,$81,'CRC Error',EOT
	DB $FD,$81,'Drive not ready',EOT
	DB $FC,$81,'Disk write protected',EOT
	DB $FB,$81,'Sector not found',EOT
	DB $FA,$81,'Lost data on writing track',EOT
	DB $F9,$01,'Invalid Drive',EOT
	DB $DE,$82,'Directory full',EOT
	DB $DD,$82,'File not found',EOT
	DB $DC,$02,'File exists',EOT
	DB $D9,$02,'Invalid FCB',EOT
	DB $D8,$82,'Disk full',EOT
	DB $D6,$82,'File is R/O',EOT
	DB $85,$10,'No System on this Drive',EOT
	DB $83,$10,'BIOS Version lower than 2.2',EOT
	DB $82,$10,'Illegal Parameter',EOT
	DB $81,$10,'Missing Parameter',EOT

	DB $00

STARTM	DB CLS
	DB 'FDISK V',VERSION/16+$30,'.',VERSION*$1000/$1000+$30
	DB '			(c) D. Lausberg	2023'
	DB CR,LF,CR,LF,EOT
XCHGM	DB CR,LF,'Insert DOS3.3 Disk in Drive '
DRVCHR	DB 'B: '
	DB CR,LF,'and press any key'
	DB CR,LF,CR,LF
	DB 'Abort with <CTRL-C>',CR,LF,CR,LF,EOT

OKM	DB CR,LF,'Disk formatted',EOT
REPM	DB CR,LF,'Another Disk?  <Y/N> ',EOT

CRLFM	DB CR,LF,EOT

SEC_E5		;empty sector 256 bytes

HEAP	= SEC_E5+$100

ENDE	END
