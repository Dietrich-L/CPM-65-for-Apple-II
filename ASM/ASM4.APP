GADRM	JSR EVAL
	BCS GADRM1
	LDA OPERA+1
	BEQ GADRM2
GADRM5	LDX #0		;ABS
	JMP SETADM

GADRM2	LDX #3		;Z
	JMP SETADM

GADRM1	CMP #NOVAL
	BNE GADRM3
	JSR GADRM5
	SEC
	RTS

GADRM3	CPX #0
	BNE GADRM4
	CMP #'#
	BNE GADRM6
	JSR EVAL
	BCS IMM1
IMM3	LDX #15 	;IMM
	JMP SETADM

IMM1	CMP #NOVAL
	BNE SYNERR
	JSR IMM3
	SEC
	RTS

GADRM6	CMP #'(
	BNE SYNERR
	JMP IND

SYNERR	CMP #$81
	BCS SYNERR1
	LDA #SYNTAX
	SEC
SYNERR1	RTS

GADRM4	CMP #',
	BNE SYNERR
	JSR GXYSP
	BCS SYNERR
	CMP #'Y
	BNE GADRM8
	LDX #6		;ABS,Y
	JMP SETADM

GADRM8	LDA OPERA+1
	BEQ GADRM9
	LDX #9		;ABS,X
	JMP SETADM

GADRM9	LDX #12 	;Z,X
	JMP SETADM


IND	JSR EVAL
	BCC SYNERR
	CMP #NOVAL
	BEQ IND2
	CMP #')
	BEQ IND3
	CMP #',
	BNE SYNERR
	JSR GWORD
	BCC SYNERR
	CMP #')
	BNE SYNERR
	CPX #1
	BNE SYNERR
	LDA LBLSTR,X
	CMP #'X
	BNE SYNERR
	LDY LINPNT
	LDA (LINE),Y
	BEQ IND6
	CMP #SP
	BNE SYNERR
IND6	LDX #21 	;(IND,X)
	JMP SETADM

IND2	JSR IND5
	SEC
	RTS

IND3	LDY LINPNT
	LDA (LINE),Y
	CMP #',
	BNE SYNERR
	INC LINPNT
	JSR GXYSP
	BCS SYNERR
	CMP #'Y
	BNE SYNERR
IND5	LDX #18 	;(IND),Y
SETADM	LDA ADMTAB,X
	ORA MASK
	STA OPCOD
	INX
	LDA ADMTAB,X
	STA OPLEN
	INX
	LDA ADMTAB,X
	CLC
	RTS


GXYSP	JSR GWORD
	BCS GXYSP1
	LDX LBLSTR
	CPX #1
	BNE GXYSP2
	LDA LBLSTR,X
	CMP #'X
	BEQ GXYSP3
	CMP #'Y
	BEQ GXYSP3
GXYSP2	SEC
GXYSP1	RTS

GXYSP3	CLC
	RTS


PLINNR	BIT SWITCH	;PRINT BEGINNING OF LINE
	BPL PLINN1	;CHECK SWITCH
	LDA #LIST
	STA OUTDEV
	JSR PLNR
PLINN1	LDA SWITCH
	AND #$20
	BEQ PLINNX
	LDA #CONOUT
	STA OUTDEV
	JSR PLNR
PLINNX	RTS


PLNR	LDA #CR		;PRINT NEWLINE
	JSR LSTCHR
	LDA #LF
	JSR LSTCHR
	LDY LINCNT+1	;PRINT LINE NR
	LDA LINCNT
	JSR HEXDEC	;IN DECIMAL
	JSR LSTLBL
	JSR LSTSP
	LDA PC+1	;PRINT PC
	JSR LSTHEX
	LDA PC
	JSR LSTHEX
	LDX #2
	JSR PRXSP
	RTS


PLINE	BIT SWITCH
	BPL PLINE1
	LDA #LIST
	STA OUTDEV
	JSR PRLINE
PLINE1	LDA SWITCH
	AND #$20
	BEQ PLINEX
	LDA #CONOUT
	STA OUTDEV
	JSR PRLINE
PLINEX	RTS

PRLINE	LDY #0
PRLIN2	LDA (LINE),Y
	BEQ PRLINX
	JSR LSTCHR
	INY
	BNE PRLIN2
PRLINX	RTS


PHEX	BIT SWITCH
	BPL PHEX1
	LDX #LIST
	STX OUTDEV
	PHA
	JSR LSTHEX
	PLA
PHEX1	TAX
	LDA SWITCH
	AND #$20
	BEQ PHEXX
	TXA
	LDX #CONOUT
	STX OUTDEV	
	JSR LSTHEX
PHEXX	RTS


PRXSP	BIT SWITCH
	BPL PRXSP1
	LDA #LIST
	STA OUTDEV
	JSR LSTXSP
PRXSP1	LDA SWITCH
	AND #$20
	BEQ PRXSPX
	LDA #CONOUT
	STA OUTDEV
	JSR LSTXSP
PRXSPX	RTS


LSTLBL	LDY #0
LSTLBL1	LDA LBLSTR,Y
	JSR LSTCHR
	INY
	CPY #5
	BCC LSTLBL1
	RTS

LSTXSP	STX XTEMP
	TXA
	PHA
LSTXSP2	DEC XTEMP
	BMI LSTXSPX
	JSR LSTSP
	JMP LSTXSP2

LSTXSPX	PLA
	TAX
	RTS

LSTSP	LDA #SP

LSTCHR	LDX OUTDEV
	JMP BDOS


LSTHEX	PHA
	LSR A
	LSR A
	LSR A
	LSR A
	JSR LSTNIB
	PLA
	AND #$0F
LSTNIB	CMP #10
	BCC LSTHE1
	ADC #6
LSTHE1	ADC #$30
	JSR LSTCHR
	RTS


GETMNE	LDX LBLSTR
GETMN3	CPX #3
	BEQ GETMN1
	BCS GETMN2
	INX
	LDA #SP
	STA LBLSTR,X
	BNE GETMN3

GETMN2	LDA #ILLOPC
	SEC
	RTS

GETMN1	LDX #MNR-OPCT+2
GETMN5	JSR OPCHK
	BCC GETMN4
	LDA OPIT,X
	TAX
	BNE GETMN5
	BEQ GETMN2

GETMN4	LDA OPPT,X
	STA MASK
	DEX
	LDA OPPT,X
	STA MAP
	DEX
	LDA OPPT,X
	RTS


OPCHK	STX XTEMP
	LDY #1
	DEX
	DEX
OPCHK3	LDA OPCT,X
	CMP LBLSTR,Y
	BEQ OPCHK1
	BCC OPCHK2
	LDX XTEMP
	DEX
	SEC
	RTS

OPCHK2	LDX XTEMP
	SEC
	RTS

OPCHK1	INX
	INY
	CPY #4
	BCC OPCHK3
	DEX
	CLC
	RTS


EVAL	JSR GOPND	;EVALUATE EXPRESSION
	BCS EVAL2	;GET 1. OPERAND
	STA OPERA
	STX OPERA+1
EVAL4	JSR GOPRT	;GET OPERATOR
	BCS EVAL1
	JSR GOPND	;GET 2. OPERAND
	BCS EVAL2
	STA OPERB
	STX OPERB+1
	LDA OPRT
	CMP #NOVAL
	BEQ EVAL3
	JSR CALC	;DO CALCULATION
	BCC EVAL4
EVAL2	RTS

EVAL1	CMP #EOL
	BNE EVAL5
	CLC
	RTS

EVAL3	STX OPERA	;SET OPERA = $AAAA
	STX OPERA+1
EVAL5	SEC
	RTS


GOPND	JSR GWORD
	STA OPRT
	BCS GOPND1
GOPND3	JSR GDEC
	BCS GOPND2
	RTS

GOPND1	CPX #0
	BNE GOPND3
	CMP #'$
	BNE GOPND4
	JMP GHEX
GOPND4	CMP #'%
	BNE GOPND5
	JMP GBIN
GOPND5	CMP #''
	BNE GOPND6
	JMP GASC
GOPND6	SEC
	RTS

GOPND2	CMP #ILLDEC
	BNE GOPND6
	JSR SEARCH
	BCS GOPND7
	JSR LBLOUT
	BCC GOPND8
GOPND7	LDA #NOVAL
	STA OPRT
	LDA #$AA
	TAX
	CLC
GOPND8	RTS


GOPRT	LDA OPRT
	BEQ GOPRT1
	CMP #NOVAL
	BEQ GOPRT2
	CMP #SP
	BEQ GOPRT3
GOPRT8	LDX #KEYTAB-OPTAB-1
GOPRT5	CMP OPTAB,X
	BEQ GOPRT4
	DEX
	BPL GOPRT5
	SEC
	RTS

GOPRT4	STX XTEMP
	CLC
	RTS

GOPRT1	LDA #EOL
	SEC
GOPRT2	RTS

GOPRT3	JSR GWORD
	BCS GOPRT6
GOPRT7	LDA #SYNTAX
	SEC
	RTS

GOPRT6	CMP #MISWRD
	BEQ GOPRT1
	CPX #0
	BNE GOPRT7
	CMP #';
	BEQ GOPRT1
	BNE GOPRT8


CALC	LDA XTEMP
	ASL A
	TAX
	LDA CTAB,X
	PHA
	INX
	LDA CTAB,X
	PHA
	RTS


GWORD	LDX #0
	LDY LINPNT
GWORD2	LDA (LINE),Y
	BEQ GWORD1
	INY
	CMP #SP
	BEQ GWORD2
GWORD6	JSR CHRCHK
	BCS GWORD3
	INX
	CPX #MAX_LBL		;check for max. length
	BCS GWORD4
	STA LBLSTR,X
	LDA (LINE),Y
	BEQ GWORD5
	INY
	BNE GWORD6
GWORD1	LDA #MISWRD
GWORD7	STX LBLSTR
	STY LINPNT
	SEC
	RTS

GWORD3	CMP #SP
	BNE GWORD7
GWORD5	STX LBLSTR
	STY LINPNT
	CLC
	RTS

GWORD4	LDA #WRDOVL
	BNE GWORD7


GNCHR	LDA (LINE),Y	;GET NEXT CHR
	BEQ GNCHR2	;END OF LINE?
	CMP #';		;COMMENT?
	BEQ GNCHR1
	INY
	CMP #SP		;IF SPACE THEN GET NEXT CHR
	BEQ GNCHR
	CLC
GNCHR1	RTS

GNCHR2	SEC
	RTS
	

SETDMA	LDA #CODBEG	;SET DMA TO CODEBUFFER
	STA DMA
	LDA #CODBEG/256
	STA DMA+1
	RTS


SETEXT	LDY #9		;SET EXTENSION
	JSR SETEXB	;X=EXT-POINTER
	JSR SETEXB
SETEXB	LDA EXTTAB,X	;SET 1 EXTENSION BYTE
	STA (FCB1),Y
	INY
	INX
	RTS


GASC	LDY LINPNT
	LDA (LINE),Y
	TAX
	INY
	LDA (LINE),Y
	BEQ GASC1
	CMP #SP
	BEQ GASC1
	CMP #''
	BEQ GASC2
GASC3	LDA #SYNTAX
	STY LINPNT
	SEC
	RTS

GASC2	INY
	LDA (LINE),Y
	INY
GASC1	STA OPRT
	TXA
	LDX #0
	STY LINPNT
	CLC
	RTS


	APP ASM5.APP

