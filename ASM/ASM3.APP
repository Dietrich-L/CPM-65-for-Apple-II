STO_STR	STY LINPNT
STO_STR4
	LDY LINPNT
	LDA (LINE),Y
	BEQ STO_STR2
	INC LINPNT
	CMP #''
	BEQ STO_STR2
	LDY #0
	STA (CODE),Y
	JSR ICODPC
	BCC STO_STR4
	RTS

STO_STR2
	LDY LINPNT
	JSR GNCHR
	BCS STO_STR1
	CMP #',
	BEQ STO_STR5
	LDA #SYNTAX
	SEC
STO_STR3
	RTS

STO_STR1
	LDA #EOL
	RTS

STO_STR5
	CLC
	RTS


OPPC	LDA OPERA		;PC=PC+OPERA
	CLC
	ADC PC
	STA PC
	LDA OPERA+1
	ADC PC+1
	STA PC+1
	RTS


I2CDPC	LDY #0
	LDA (CODE),Y
	JSR PHEX
	LDX #1
	JSR PRXSP
I2CDP2	INY
	CPY OPLEN
	BCS I2CDP1
	CPY #4
	BCS I2CDP1
	LDA (CODE),Y
	JSR PHEX
	JMP I2CDP2

I2CDP1	LDX #2
	JSR PRXSP
	INY
	CPY #5
	BCC I2CDP1
ICODPC	LDA OPLEN
	TAY		;SAVE OPLEN
	CLC
	ADC PC
	STA PC
	BCC ICODP5
	INC PC+1
ICODP7	CLC
ICODP5	TYA
	ADC CODE
	STA CODE
	TAY
	BCC ICODP6
	INC CODE+1
ICODP6	LDA CODE+1
	CMP HEAP+1
	BCC ICODP2
	BEQ ICODP3
ICODP4	LDA #MEMOVL
	RTS

ICODP3	CPY HEAP
	BCS ICODP4
ICODP2	RTS


SETFCB	LDY #0
	LDA (FCB1),Y
	TAX
	LDA #FCBA	;SET FCB1 = FCBA
	STA FCB1
	LDA #FCBA/256
	STA FCB1+1
	TXA
	STA (FCB1),Y	;SET DRIVE TO DEFAULT
	JSR RESFCB	;RESET FCB1
SETFCB3	JSR GNXTCHR	;GET NEXT CHR, SKIP SPACES
	BCC SETFCB4
	CMP #SP
	BEQ SETFCB3
	BNE SETFCB5

SETFCB4	TAX
	LDY LINPNT
	LDA (LINE),Y	;CHECK FOR ':' AS 2. CHR
	BEQ SETFCB7
	CMP #':
	BEQ SETFCB2
SETFCB7	DEC LINPNT	;ADJUST CMD VECTOR
SETFCB6	LDX #8		;MAX. 8 BYTES FILENAME
	LDY #1
	JSR FILFCB
	BCC SETFCB8	;end of filename
	CMP #'.
	BNE SETFCB5
	LDY #9
	LDX #3		;MAX. 3 BYTES EXTENSION
	JSR FILFCB
	BCC SETFCB8
SETFCB5	JSR RESPNT
	LDA #ILLFN	;ILLEGAL OR NO FILENAME
	SEC
SETFCB8	RTS

SETFCB2	CPX #'A		;CHECK FOR VALID DRIVE CHR
	BCC SETFCB5
	CPX #'I
	BCS SETFCB5
	LDY #0
	TXA
	AND #$0F
	STA (FCB1),Y	;SET DRIVE BYTE
	INC LINPNT
	BNE SETFCB6


FILFCB	JSR GNXTCHR	;fill FCB with filename or ext
	BCS FILFCB7
FILFCB1	STA (FCB1),Y
	INY
	DEX
	BNE FILFCB
FILFCB6	JSR GNXTCHR	;get next chr
FILFCB8	CMP #EOL	;EOL or SPACE only
	BEQ FILFCB5
	CMP #SP
	BEQ FILFCB5
FILFCB7	SEC		;must be a '. or an illegal chr
	RTS

FILFCB5	CLC		;end of FCB reached
	RTS


GNXTCHR	STY YBUF	;GET NEXT CHR FROM INBUF
	LDY LINPNT
	LDA (LINE),Y
	BEQ GNXTCH1
	INC LINPNT
	CMP #'.
	BEQ GNXTCH2
	JSR CHRCHK
GNXTCH2	LDY YBUF
	RTS

GNXTCH1	LDA #EOL
	RTS


RESFCB	LDY #11 	;RESET FCB
	LDA #SP
RESFC1	STA (FCB1),Y
	DEY
	BNE RESFC1
	RTS


GLBL	JSR GWORD
	BCS GLBL1
	RTS

GLBL1	CMP #MISWRD
	BEQ GLBL3
	CPX #0
	BNE GLBL2
	CMP #';
	BNE GLBL2
GLBL3	LDA #EOL
	SEC
	RTS

GLBL2	JMP SYNERR


SAVNOD	LDA NOD
	STA SNOD
	LDA NOD+1
	STA SNOD+1
	RTS


RSTNOD	LDA SNOD
	STA NOD
	LDA SNOD+1
	STA NOD+1
	RTS


SDFLAG	LDA DFLAG
	ORA #$80
	STA DFLAG
	RTS


RDFLAG	LDA DFLAG
	AND #$7F
	STA DFLAG
	RTS


RNGCHK	LDA OPERA
	LDX OPERA+1
	BEQ RNGCH1
	INX 
	BEQ RNGCH2
RNGCH3	SEC
	RTS

RNGCH1	CMP #$80
	RTS

RNGCH2	CMP #$80
	BCC RNGCH3
	CLC
	RTS


DSTO	LDY #0
	STA (CODE),Y
	INY
	TXA
	STA (CODE),Y
	LDA #2
	STA OPLEN
	RTS


PUTOPC	LDY #0
	LDA OPCOD
	STA (CODE),Y
	INY
	LDA OPERA
	STA (CODE),Y
	INY
	CPY OPLEN
	BEQ PUTOP1
	LDA OPERA+1
	STA (CODE),Y
PUTOP1	RTS


CHKAA	LDY #0
	LDA (CODE),Y
	JSR LENOP
	STA OPLENA
	INY
	LDA (CODE),Y
	CMP #$AA
	BEQ CHKAA1
	LDA OPLENA
	STA OPLEN
	CLC
CHKAA1	RTS


LENOP	LDX #1
	CMP #0
	BEQ LENOPX
	CMP #$40
	BEQ LENOPX
	CMP #$60
	BEQ LENOPX
	LDX #3
	CMP #$20
	BEQ LENOPX
	AND #$1F
	CMP #$19
	BEQ LENOPX
	AND #$0F
	TAX
	LDA LENTAB,X
	RTS

LENOPX	TXA
	RTS


;------------------------------------

SETSW	LDY #0		;SET SWITCHES
	LDA (DMA),Y
	STA TEMP
SETSW2	INY		;SEARCH /
	CPY TEMP
	BCS SETSW1
	LDA (DMA),Y
	CMP #'/
	BNE SETSW2
SETSW5	INY
	CPY TEMP
	BCS SETSW1
	LDA (DMA),Y
	LDX #0
SETSW4	CMP SWTAB,X	;CHECK SWITCH KEY
	BEQ SETSW3
	INX
	INX
	CPX #OPTAB-SWTAB
	BCC SETSW4
SETSW1	RTS

SETSW3	INX		;SET SWITCH
	LDA SWTAB,X
	ORA SWITCH
	STA SWITCH
	INX
	BNE SETSW5


SAVCOM	LDX #3		;SAVE .COM-FILE
	JSR SETEXT	;.EXT = .COM
	JSR FOPEN	;OPEN FILE
	BCS SAVCO2
SAVCO5	JSR SETDMA
SAVCO3	LDX #WRITE
	JSR BDOS
	BCS SAVCO2
	INC DMA+1
	SEC
	LDA DMA
	SBC CODE
	LDA DMA+1
	SBC CODE+1
	BCC SAVCO3
	LDX #CLOSE
	JSR BDOS
SAVCO2	RTS


SAVLBL	LDX #6		;SAVE *.LBL-FILE
	JSR SETEXT	;.EXT = .LBL
	JSR SETDMA
	JSR FOPEN
	BCS SAVLB2
SAVLB7	JSR G1LBL	;GET 1. LABEL
	BCS SAVLB4
	LDY #0
	STY BUFPNT
SAVLB5	JSR WRLBL	;WRITE LABEL
	BCS SAVLB2
	JSR GNLBL	;GET NEXT LABEL
	BCS SAVLB4
	JSR WRLBCR	;WRITE LABEL + CR
	BCS SAVLB2
	JSR GNLBL
	BCC SAVLB5
SAVLB4	LDA #EOTM
	JSR WRLCH
	BCS SAVLB2
	LDA BUFPNT
	BEQ SAVLB3
	LDX #WRITE
	JSR BDOS
	BCS SAVLB2
SAVLB3	LDX #CLOSE
	JSR BDOS
SAVLB2	RTS


FOPEN	LDX #OPEN	;OPEN FILE
	JSR BDOS
	BCC FOPENX
	CMP #NOTFND	;IF NOT FOUND
	BNE FOPEN1
	LDX #CREATE	;THEN CREATE FILE
	JSR BDOS
FOPENX	RTS

FOPEN1	SEC
	RTS


WRLBCR	JSR WRLBL
	BCS WRLBCX
	LDA #CR
	JSR WRLCH
	BCS WRLBCX
	LDA #LF
	JSR WRLCH
WRLBCX	RTS


WRLBL	LDY #0
	LDA (NODSTR),Y
	BPL WRLBL4
	LDA LFLAG
	ORA #$40
	STA LFLAG
	LDA (NODSTR),Y
	AND #$1F
WRLBL4	STA NODLEN
	INC NODLEN
	INY
WRLBL2	STY NODPNT
	LDA (NODSTR),Y
	JSR WRLCH
	BCS WRLBLX
	LDY NODPNT
	INY
	CPY NODLEN
	BCC WRLBL2
WRLBL5	CPY #34
	BCS WRLBL3
	INY
	STY NODPNT
	JSR WRLSP
	BCS WRLBLX
	LDY NODPNT
	BPL WRLBL5

WRLBL3	LDA #'$
	JSR WRLCH
	BCS WRLBLX
	BIT LFLAG
	BVC WRLBL6
	LDX #3
WRLBL8	LDA #'*
	JSR WRLCH
	BCS WRLBLX
	DEX
	BPL WRLBL8
	LDA LFLAG
	AND #$BF
	STA LFLAG
	JMP WRLBL7

WRLBL6	LDY #5
	LDA (NOD),Y
	JSR WRLBY
	BCS WRLBLX
	LDY #4
	LDA (NOD),Y
	JSR WRLBY
	BCS WRLBLX
WRLBL7	JSR WRLSP
	BCS WRLBLX
WRLSP	LDA #SP
	JSR WRLCH
WRLBLX	RTS


WRLBY	PHA
	LSR A
	LSR A
	LSR A
	LSR A
	JSR WRLNI
	PLA
	BCS WRLBYX
	AND #$0F
WRLNI	CMP #$0A
	BCC WRLBY1
	ADC #6
WRLBY1	ADC #$30
	JSR WRLCH
WRLBYX	RTS


WRLCH	LDY BUFPNT
	STA (DMA),Y
	INC BUFPNT
	BEQ WRLCH1
	CLC
	RTS

WRLCH1	LDX #WRITE
	JSR BDOS
	RTS


	APP ASM4.APP

